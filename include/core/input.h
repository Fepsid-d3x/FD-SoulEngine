#ifndef INPUT_H
#define INPUT_H

#include "./engine.h"
#include <GLFW/glfw3.h>

constexpr int FDSE_KEY_LAST  = GLFW_KEY_LAST;
constexpr int FDSE_PRESS = GLFW_PRESS;

typedef enum{
    FDSE_KEY_A = GLFW_KEY_A, FDSE_KEY_B = GLFW_KEY_B, FDSE_KEY_C = GLFW_KEY_C,
    FDSE_KEY_D = GLFW_KEY_D, FDSE_KEY_E = GLFW_KEY_E, FDSE_KEY_F = GLFW_KEY_F,
    FDSE_KEY_G = GLFW_KEY_G, FDSE_KEY_H = GLFW_KEY_H, FDSE_KEY_I = GLFW_KEY_I,
    FDSE_KEY_J = GLFW_KEY_J, FDSE_KEY_K = GLFW_KEY_K, FDSE_KEY_L = GLFW_KEY_L,
    FDSE_KEY_M = GLFW_KEY_M, FDSE_KEY_N = GLFW_KEY_N, FDSE_KEY_O = GLFW_KEY_O,
    FDSE_KEY_P = GLFW_KEY_P, FDSE_KEY_Q = GLFW_KEY_Q, FDSE_KEY_R = GLFW_KEY_R, 
	FDSE_KEY_S = GLFW_KEY_S, FDSE_KEY_T = GLFW_KEY_T, FDSE_KEY_U = GLFW_KEY_U,
    FDSE_KEY_V = GLFW_KEY_V, FDSE_KEY_W = GLFW_KEY_W, FDSE_KEY_X = GLFW_KEY_X, 
    FDSE_KEY_Y = GLFW_KEY_Y, FDSE_KEY_Z = GLFW_KEY_Z, FDSE_KEY_1 = GLFW_KEY_1,
    FDSE_KEY_2 = GLFW_KEY_2, FDSE_KEY_3 = GLFW_KEY_3, FDSE_KEY_4 = GLFW_KEY_4, 
    FDSE_KEY_5 = GLFW_KEY_5, FDSE_KEY_6 = GLFW_KEY_6, FDSE_KEY_7 = GLFW_KEY_7, 
    FDSE_KEY_8 = GLFW_KEY_8, FDSE_KEY_9 = GLFW_KEY_9, FDSE_KEY_0 = GLFW_KEY_0,
    FDSE_KEY_TAB = GLFW_KEY_TAB, FDSE_KEY_SPACE = GLFW_KEY_SPACE, FDSE_KEY_LEFT = GLFW_KEY_LEFT,
    FDSE_KEY_RIGHT = GLFW_KEY_RIGHT, FDSE_KEY_UP = GLFW_KEY_UP, FDSE_KEY_DOWN = GLFW_KEY_DOWN,
    FDSE_KEY_RALT = GLFW_KEY_RIGHT_ALT, FDSE_KEY_RSUPER = GLFW_KEY_RIGHT_SUPER, FDSE_KEY_ESCAPE = GLFW_KEY_ESCAPE,
    FDSE_KEY_LCTRL = GLFW_KEY_LEFT_CONTROL, FDSE_KEY_LSHIFT = GLFW_KEY_LEFT_SHIFT, FDSE_KEY_LALT = GLFW_KEY_LEFT_ALT, 
    FDSE_KEY_LSUPER = GLFW_KEY_LEFT_SUPER, FDSE_KEY_RCTRL = GLFW_KEY_RIGHT_CONTROL, FDSE_KEY_RSHIFT = GLFW_KEY_RIGHT_SHIFT,
    FDSE_KEY_BACKSPACE = GLFW_KEY_BACKSPACE, FDSE_KEY_ENTER = GLFW_KEY_ENTER, FDSE_KEY_MENU = GLFW_KEY_MENU
}KEY_KEYBOARD;

typedef enum{

}KEY_GAMEPAD;

namespace fdse {
    void input_update();
    bool is_key_pressed(int key);
    bool is_key_released(int key);
    bool is_key_held(int key);
}

#endif